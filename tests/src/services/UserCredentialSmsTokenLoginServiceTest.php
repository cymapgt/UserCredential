<?php

namespace cymapgt\core\application\authentication\UserCredential\services;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-07-25 at 00:31:37.
 */
class UserCredentialSmsTokenServiceTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var UserCredentialSmsTotpService
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new UserCredentialSmsTokenLoginService;
        $this->password = \password_hash('123456', \PASSWORD_DEFAULT);        
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers cymapgt\core\application\authentication\UserCredential\services\UserCredentialSmsTotpService::initialize
     */
    public function testInitializeStage1Exception() {
        $this->setExpectedException('cymapgt\Exception\UserCredentialException', 'The multi factor stages register is initialized with an an unknown state');
        $this->object->setMultiFactor(true);
        $this->object->initialize();
    }
    
    /**
     * @covers cymapgt\core\application\authentication\UserCredential\services\UserCredentialSmsTotpService::initialize
     */
    public function testInitializeStage1() {
        $this->object->setMultiFactor(true);
        $this->object->setMultiFactorStages(array('current' => 1, 1 => array()));
        $this->object->setEncKeyLength(16);
        $this->object->setCurrentUserName('rhossis');
        $this->object->setCurrentPassword(\password_hash('123456', \PASSWORD_DEFAULT));
        $this->object->initialize();
        $mFactorStages = $this->object->getMultiFactorStages();
        $this->assertInternalType('bool', $mFactorStages[1]['statuss']);
        $this->assertEquals(false, $mFactorStages[1]['statuss']);
    }

    /**
     * @covers cymapgt\core\application\authentication\UserCredential\services\UserCredentialSmsTotpService::authenticate
     */
    public function testAuthenticateStage1() {
        $this->object->setMultiFactor(true);
        $this->object->setMultiFactorStages(array('current' => 1, 1 => array()));
        $this->object->setEncKeyLength(16);
        $this->object->setCurrentUserName('rhossis');
        $this->object->setCurrentPassword($this->password);
        $this->object->setPassword('1234567');
        $this->object->initialize();
        $authResult = $this->object->authenticate();
        $this->assertInternalType('array', $authResult);
        $this->assertEquals(false, $authResult[1]['statuss']);
        $this->object->setPassword('123456');
        $this->object->initialize();
        $authResult2 = $this->object->authenticate();
        $this->assertInternalType('array', $authResult2);
        $this->assertEquals(true, $authResult2[1]['statuss']);
        $this->assertInternalType('array', $authResult2[2]);
        $this->assertArrayHasKey('enc_key', $authResult2[2]);
        $this->assertArrayHasKey('statuss', $authResult2[2]);        
    }
    
    /**
     * @covers cymapgt\core\application\authentication\UserCredential\services\UserCredentialSmsTotpService::initialize
     */
    public function testInitializeStage2Exception() {
        $this->setExpectedException('cymapgt\Exception\UserCredentialException', 'The user TOTP profile is not initialized properly');
        $this->object->setMultiFactor(true);
        $this->object->setMultiFactorStages(array('current' => 2, 1 => array()));
        $this->object->setEncKeyLength(16);
        $this->object->setCurrentUserName('rhossis');
        $this->object->setCurrentPassword($this->password);
        $this->object->setPassword('1234567');
        $this->object->initialize();
    }
    
    /**
     * @covers cymapgt\core\application\authentication\UserCredential\services\UserCredentialSmsTotpService::initialize
     */
    public function testInitializeStage2() {
        $this->object->setMultiFactor(true);
        $this->object->setMultiFactorStages(array('current' => 1, 1 => array()));
        $this->object->setEncKeyLength(16);
        $this->object->setCurrentUserName('rhossis');
        $this->object->setCurrentPassword($this->password);
        $this->object->setPassword('123456');
        $this->object->initialize();
        $authResult = $this->object->authenticate(); 
        $encKey = $authResult[2]['enc_key'];        
        $verificationHash = \crypt($this->object->getPassword(), $authResult[2]['enc_key']);
        $nowObj = new \DateTime();
        $nowObj->setTimestamp(($nowObj->getTimestamp() - 140));
        $totpTimeLimit = 180;

        $this->object->setMultiFactor(true);
        $this->object->setMultiFactorStages(array('current' => 2, 1 => array('statuss' => true)));
        $this->object->setEncKeyLength(16);
        $this->object->setCurrentUserName('rhossis');
        $this->object->setCurrentPassword($this->password);
        
        $totpProfile = array (
           'enc_key' => $encKey,
            'totp_timestamp' => $nowObj,
            'totp_timelimit' => $totpTimeLimit
        );
        $this->object->setUserTotpProfile($totpProfile);
        $this->object->setVerificationHash($verificationHash);
        $oneTimeToken = \password_hash('123456', \PASSWORD_DEFAULT);
        $this->object->setOneTimeToken($oneTimeToken);
        $this->object->setCurrentOneTimeToken($oneTimeToken);        
        $this->object->initialize();
        $this->assertEquals(1, true);
    }    
    
    /**
     * @covers cymapgt\core\application\authentication\UserCredential\services\UserCredentialSmsTotpService::authenticate
     */
    public function testAuthenticateStage2() {
        $this->object->setMultiFactor(true);
        $this->object->setMultiFactorStages(array('current' => 1, 1 => array()));
        $this->object->setEncKeyLength(16);
        $this->object->setCurrentUserName('rhossis');
        $this->object->setCurrentPassword($this->password);
        $this->object->setPassword('123456');
        $this->object->initialize();
        $authResult = $this->object->authenticate(); 
        $encKey = $authResult[2]['enc_key'];        
        $verificationHash = \crypt($this->object->getCurrentPassword(), $authResult[2]['enc_key']);

        $nowObj = new \DateTime();
        $nowObj->setTimestamp(($nowObj->getTimestamp() - 140));
        $totpTimeLimit = 180;

        $this->object->setMultiFactor(true);
        $this->object->setMultiFactorStages(array('current' => 2, 1 => array('statuss' => true)));
        $this->object->setEncKeyLength(16);
        $this->object->setCurrentUserName('rhossis');
        $this->object->setCurrentPassword($this->password);
        
        $totpProfile = array (
           'enc_key' => $encKey,
            'totp_timestamp' => $nowObj,
            'totp_timelimit' => $totpTimeLimit
        );
        $this->object->setUserTotpProfile($totpProfile);
        $this->object->setVerificationHash($verificationHash);
        $oneTimeToken = \password_hash('827110', \PASSWORD_DEFAULT);
        $this->object->setCurrentOneTimeToken($oneTimeToken);
        $this->object->setOneTimeToken('827110');
        $this->object->initialize();
        $this->assertEquals(true, $this->object->authenticate());
    }
    
    /**
     * @covers cymapgt\core\application\authentication\UserCredential\services\UserCredentialSmsTotpService::authenticate
     */
    public function testAuthenticateStageTimelimit() {
        $this->object->setMultiFactor(true);
        $this->object->setMultiFactorStages(array('current' => 1, 1 => array()));
        $this->object->setEncKeyLength(16);
        $this->object->setCurrentUserName('rhossis');
        $this->object->setCurrentPassword($this->password);
        $this->object->setPassword('123456');
        $this->object->initialize();
        $authResult = $this->object->authenticate(); 
        $encKey = $authResult[2]['enc_key'];        
        $verificationHash = \crypt($this->object->getCurrentPassword(), $authResult[2]['enc_key']);

        $nowObj = new \DateTime();
        $nowObj->setTimestamp(($nowObj->getTimestamp() - 181));
        $totpTimeLimit = 180;

        $this->object->setMultiFactor(true);
        $this->object->setMultiFactorStages(array('current' => 2, 1 => array('statuss' => true)));
        $this->object->setEncKeyLength(16);
        $this->object->setCurrentUserName('rhossis');
        $this->object->setCurrentPassword($this->password);
        
        $totpProfile = array (
           'enc_key' => $encKey,
            'totp_timestamp' => $nowObj,
            'totp_timelimit' => $totpTimeLimit
        );
        $this->object->setUserTotpProfile($totpProfile);
        $this->object->setVerificationHash($verificationHash);
        $oneTimeToken = \password_hash('827110', \PASSWORD_DEFAULT);
        $this->object->setCurrentOneTimeToken($oneTimeToken);
        $this->object->setOneTimeToken('827110');
        $this->object->initialize();
        $this->assertEquals(false, $this->object->authenticate());
    }
    
    /**
     * @covers cymapgt\core\application\authentication\UserCredential\services\UserCredentialSmsTotpService::authenticate
     */
    public function testAuthenticateStageTokenWrong() {
        $this->object->setMultiFactor(true);
        $this->object->setMultiFactorStages(array('current' => 1, 1 => array()));
        $this->object->setEncKeyLength(16);
        $this->object->setCurrentUserName('rhossis');
        $this->object->setCurrentPassword($this->password);
        $this->object->setPassword('123456');
        $this->object->initialize();
        $authResult = $this->object->authenticate(); 
        $encKey = $authResult[2]['enc_key'];        
        $verificationHash = \crypt($this->object->getCurrentPassword(), $authResult[2]['enc_key']);

        $nowObj = new \DateTime();
        $nowObj->setTimestamp(($nowObj->getTimestamp() - 140));
        $totpTimeLimit = 180;

        $this->object->setMultiFactor(true);
        $this->object->setMultiFactorStages(array('current' => 2, 1 => array('statuss' => true)));
        $this->object->setEncKeyLength(16);
        $this->object->setCurrentUserName('rhossis');
        $this->object->setCurrentPassword($this->password);
        
        $totpProfile = array (
           'enc_key' => $encKey,
            'totp_timestamp' => $nowObj,
            'totp_timelimit' => $totpTimeLimit
        );
        $this->object->setUserTotpProfile($totpProfile);
        $this->object->setVerificationHash($verificationHash);
        $oneTimeToken = \password_hash('827110', \PASSWORD_DEFAULT);
        $this->object->setCurrentOneTimeToken($oneTimeToken);
        $this->object->setOneTimeToken('827118');
        $this->object->initialize();
        $this->assertEquals(false, $this->object->authenticate());
    }    
    
    /**
     * @covers cymapgt\core\application\authentication\UserCredential\services\UserCredentialSmsTotpService::authenticate
     */
    public function testAuthenticateStageEncKeyWrong() {
        $this->object->setMultiFactor(true);
        $this->object->setMultiFactorStages(array('current' => 1, 1 => array()));
        $this->object->setEncKeyLength(16);
        $this->object->setCurrentUserName('rhossis');
        $this->object->setCurrentPassword($this->password);
        $this->object->setPassword('123456');
        $this->object->initialize();
        $authResult = $this->object->authenticate();         
        $verificationHash = \crypt($this->object->getCurrentPassword(), $authResult[2]['enc_key']);

        $nowObj = new \DateTime();
        $nowObj->setTimestamp(($nowObj->getTimestamp() - 140));
        $totpTimeLimit = 180;

        $this->object->setMultiFactor(true);
        $this->object->setMultiFactorStages(array('current' => 2, 1 => array('statuss' => true)));
        $this->object->setEncKeyLength(16);
        $this->object->setCurrentUserName('rhossis');
        $this->object->setCurrentPassword($this->password);
        
        $totpProfile = array (
           'enc_key' => 'hElLoThErEiAmAwRoNgEnCkEy',
            'totp_timestamp' => $nowObj,
            'totp_timelimit' => $totpTimeLimit
        );
        $this->object->setUserTotpProfile($totpProfile);
        $this->object->setVerificationHash($verificationHash);
        $oneTimeToken = \password_hash('827110', \PASSWORD_DEFAULT);
        $this->object->setCurrentOneTimeToken($oneTimeToken);
        $this->object->setOneTimeToken('827110');
        $this->object->initialize();
        $this->assertEquals(false, $this->object->authenticate());
    }       
}
